{".class": "MypyFile", "_fullname": "tests.core.test_nroot", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "Float": {".class": "SymbolTableNode", "cross_ref": "calculator.numbers.number.Float", "kind": "Gdef"}, "Neg": {".class": "SymbolTableNode", "cross_ref": "calculator.core.neg.Neg", "kind": "Gdef"}, "Nroot": {".class": "SymbolTableNode", "cross_ref": "calculator.core.nroot.Nroot", "kind": "Gdef"}, "Three": {".class": "SymbolTableNode", "cross_ref": "tests._shortcuts.Three", "kind": "Gdef"}, "Two": {".class": "SymbolTableNode", "cross_ref": "tests._shortcuts.Two", "kind": "Gdef"}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "tests.core.test_nroot.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "tests.core.test_nroot.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "tests.core.test_nroot.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "tests.core.test_nroot.__package__", "name": "__package__", "type": "builtins.str"}}, "raises": {".class": "SymbolTableNode", "cross_ref": "_pytest.python_api.raises", "kind": "Gdef"}, "test_commutative": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [], "arg_names": [], "flags": [], "fullname": "tests.core.test_nroot.test_commutative", "name": "test_commutative", "type": null}}, "test_root_integer": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [], "arg_names": [], "flags": [], "fullname": "tests.core.test_nroot.test_root_integer", "name": "test_root_integer", "type": null}}}, "path": "./tests/core/test_nroot.py"}