-
 Tworzę listę płac
-
 !record {model: hr2.payroll.register, id: hr_register2}:
    name: Payroll1
    register_month: 12
    register_year: 2014
    config: hr_payroll_pl.hr_etat1_config
    date: "2014-12-01"
-
 Wyliczam listę płac
-
 !python {model: hr2.payroll.register}: |
    from datetime import datetime
    import time
    self.compute_additions(cr,uid,[ref("hr_register2")],context=context)
    self.compute_elements(cr,uid,[ref("hr_register2")],context=context)
    self.compute_taxes(cr,uid,[ref("hr_register2")],context=context)
    self.validate_payroll(cr, uid,[ref("hr_register2")],context=context)
-
 Sprawdzam poprawność wyliczeń
-
 !python {model: hr2.payslip}: |
    employee_id = ref("hr_payroll_pl.hr_pracownik1")
    payslip_id = self.pool.get('hr2.payslip').search(cr,uid,[('employee_id','=',employee_id), ('register_id','=',ref("hr_register2"))],context=context)[0]
    payslip_obj = self.pool.get('hr2.payslip').browse(cr,uid,payslip_id,context=context)
    assert payslip_obj.chor_pracownik == 48.63, "Składka chorobowa pracownika powinna wynosić 48.63, a wynosi %s" % payslip_obj.chor_pracownik
    assert payslip_obj.emr_pracownik == 193.74, "Składka emerytalna pracownika powinna wynosić 193.74, a wynosi %s" % payslip_obj.emr_pracownik
    assert payslip_obj.rent_pracownik == 29.78, "Składka rentowa pracownika powinna wynosić 29.78, a wynosi %s" % payslip_obj.rent_pracownik
    assert payslip_obj.emr_pracodawca == 193.74, "Składka emerytalna pracodawcy powinna wynosić 193.74, a wynosi %s" % payslip_obj.emr_pracodawca
    assert payslip_obj.rent_pracodawca == 129.03, "Składka rentowa pracodawcy powinna wynosić 129.03, a wynosi %s" % payslip_obj.rent_pracodawca
    assert payslip_obj.fp == 48.63, "Fundusz pracy powinien wynosić 48.63, a wynosi %s" % payslip_obj.fp
    assert payslip_obj.fgsp == 1.99, "Fundusz gwarantowanych świadczeń pracownika powinien wynosić 1.99, a wynosi %s" % payslip_obj.fgsp
    assert payslip_obj.skladka_zdrowotna_odliczona == 132.75, "Składka zdrowotna odliczona powinna wynosić 132.75, a wynosi %s" % payslip_obj.skladka_zdrowotna_odliczona
    assert payslip_obj.skladka_zdrowotna_od_netto == 21.41, "Składka zdrowotna od netto powinna wynosić 21.41, a wynosi %s" % payslip_obj.skladka_zdrowotna_od_netto
    assert payslip_obj.do_wyplaty == 1449.69, "Wypłata powinna wynosić 1449.69, a wynosi %s" % payslip_obj.do_wyplaty
    print "Test zakończony powodzeniem"
